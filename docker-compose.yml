services:
  nginx:
    build: ./nginx
    hostname: nginx
    container_name: nginx
    ports:
      - 1337:80
    depends_on:
      - app
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 100M
        reservations:
          cpus: '0.15'
          memory: 50M
    networks:
      application_network:
        ipv4_address: 172.28.5.29

  app:
    build: ./app
    container_name: app
    image: app
    hostname: app
    command: uvicorn app:app --host 0.0.0.0 --port 8000 --workers 2 --reload --proxy-headers --forwarded-allow-ips=*
    ports:
      - 8000:8000
    volumes:
      - ./app:/app
    env_file:
      - .env
    environment:
      MONGODB_URL: ${MONGODB_URL}
      MONGO_DB_NAME: ${MONGO_DB_NAME}
      MONGO_DB_COLLECTION: ${MONGO_DB_COLLECTION}
      MONGO_USER_USERNAME: ${MONGO_USER_USERNAME}
      MONGO_USER_PASSWORD: ${MONGO_USER_PASSWORD}
    depends_on:
      - mongo
    healthcheck:
      test: curl --fail http://localhost:8000/healthcheck/ || exit 1
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
    networks:
      application_network:
        ipv4_address: 172.28.5.30

  mongo:
    image: mongo:latest
    container_name: mongo
    hostname: mongo
    restart: unless-stopped
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - mongodb-data:/data/db/
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    healthcheck:
      test: echo 'db.stats().ok' | mongo localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1024M
        reservations:
          cpus: '0.50'
          memory: 512M
    networks:
      application_network:
        ipv4_address: 172.28.5.31

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    hostname: mongo-express
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - mongo
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
    networks:
      application_network:
        ipv4_address: 172.28.5.32

  locust-master:
    image: locustio/locust
    hostname: locust-master
    container_name: locust-master
    restart: unless-stopped
    ports:
      - 8089:8089
    volumes:
      - ./app:/mnt/locust
    command: -f /mnt/locust/locustfile.py --master -H http://locust-master:8089
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
    networks:
      application_network:
        ipv4_address: 172.28.5.33

  locust-worker:
    image: locustio/locust
    hostname: locust-worker
    restart: unless-stopped
    volumes:
      - ./app:/mnt/locust
    command: -f /mnt/locust/locustfile.py --worker --master-host locust-master
    deploy:
      mode: replicated
      replicas: 2
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
    networks:
      - application_network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    hostname: prometheus
    ports:
      - 9090:9090
    environment:
      - GF_INSTALL_PLUGINS: grafana-clock-panel, grafana-simple-json-datasource
    volumes:
      - ./prometheus-data/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
        reservations:
          cpus: '0.15'
          memory: 128M
    networks:
      application_network:
        ipv4_address: 172.28.5.34

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    hostname: grafana
    ports:
      - 3000:3000
    volumes:
      - grafana-data:/var/lib/grafana
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
        reservations:
          cpus: '0.15'
          memory: 128M
    networks:
      application_network:
        ipv4_address: 172.28.5.35


volumes:
  mongodb-data:
    name: mongodb-data
  prometheus-data:
    name: prometheus-data
  grafana-data:
    name: grafana-data


networks:
  application_network:
    name: application_network
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
          ip_range: 172.28.5.0/24
          gateway: 172.28.5.2
